<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!--
    Copyright 2010 The myBatis Team

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->


<!--    
root 엘리먼트 이름은 mapper임. ibatis에서는 SqlMap 이였음.   
namespace는 지정을 해도 되고 안해도 됩니다. 
ibatis에서는 네임스페이스 사용여부를 설정에서 명시적으로 선언해줘야 함.
myBatis에서는 따로 설정할 필요가 없이 namespace attribute가 있고 sql id 값에 점(.)이 들어 있지 않아야 namespace를 사용하고
sql id 값에 점(.)이 포함되어 있으면 namespace attribute가 있더라도 sql id값만 사용한다.
-->
<mapper namespace="front.test.user">
	
	<!--  
	<resultMap type="java.util.HashMap" id="topicResult">
		<constructor>
			<idArg column="id" javaType="String"/>
			<idArg column="name" javaType="String"/>
		</constructor>
	</resultMap>
	
	<select id="getTopic" parameterType="String" resultType="topicResult">
		SELECT ID, NAME FROM TOPIC WHERE ID = #{ID}
	</select>
	
	<insert id="insertAuthor" parameterType="domain.blog.Author">
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			select CAST(RANDOM()*1000000 as INTEGER) a from SYSIBM.SYSDUMMY1
		</selectKey>
		
		insert into Author
			(id, username, password, email,bio, favourite_section)
		values
			(#{id}, #{username}, #{password}, #{email}, #{bio},
			#{favouriteSection,jdbcType=VARCHAR}
		)
	</insert>
	
	<sql id=”userColumns”> id,username,password </sql>
	<select id=”selectUsers” parameterType=”int” resultType=”hashmap”>
		select <include refid=”userColumns”/>
		from some_table
		where id = #{id}
	</select>
	
	#{age,javaType=double,jdbcType=NUMERIC,typeHandler=MyTypeHandler,numericScale=2
	#{department, mode=OUT, jdbcType=CURSOR, javaType=ResultSet,resultMap=departmentResultMap}
	-->
	
	
	<insert id="create">
		CREATE TABLE TB_USER (
			ID NUMBER,
			PW VARCHAR2(100) NOT NULL,
			NAME VARCHAR2(50) NOT NULL,
			ADDR VARCHAR2(4000),
			REGDATE DATE,
			MODDATE TIMESTAMP,
			ETC CLOB,
			CONSTRAINT TB_USER_ID_PK PRIMARY KEY (ID)
		)
	</insert>
	
	<insert id="insert" parameterType="map">
		<selectKey keyProperty="ID" resultType="int" order="BEFORE">
			SELECT NVL(MAX(ID),0)+1 ID FROM TB_USER
		</selectKey>
		INSERT INTO TB_USER
				(ID, PW, NAME)
		VALUES	(#{ID}, #{PW}, #{NAME})
		<!--  
		INSERT INTO TB_USER
				(ID, PW, NAME, ADDR, REGDATE, MODDATE, ETC)
		VALUES	(#{ID}, #{PW}, #{NAME}, #{ADDR, jdbcType=VARCHAR}, #{REGDATE}, #{MODDATE}, #{ETC})
		-->
	</insert>
	
	<insert id="insert2" parameterType="map">
		<selectKey keyProperty="ID" resultType="int" order="BEFORE">
			SELECT NVL(MAX(ID),0)+1 ID FROM TB_USER2
		</selectKey>
		INSERT INTO TB_USER2
				(ID, PW, NAME)
		VALUES	(#{ID}, #{PW}, #{NAME})
	</insert>
	
	<select id="select" parameterType="int" resultType="map">
		SELECT ID, PW, NAME, ADDR, REGDATE, MODDATE, ETC
		  FROM TB_USER
		 WHERE ID = #{ID}
	</select>
	
	<select id="select2" parameterType="string" resultType="map">
		SELECT ID, PW, NAME, ADDR, REGDATE, MODDATE, ETC
		  FROM TB_USER
		 WHERE ID = #{ID}
	</select>
	
	<select id="selectDetail" parameterType="box" resultType="box">
		SELECT ID, PW, NAME, ADDR, REGDATE, MODDATE, ETC
		  FROM TB_USER
		<if test="ID != NULL">
			WHERE ID = #{ID}			
		</if>
	</select>
	
	<delete id="delete" parameterType="string">
		DELETE
		  FROM TB_USER
		 WHERE ID = #{ID}
	</delete>
	
</mapper>
