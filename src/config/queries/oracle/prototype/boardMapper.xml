<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!--
    Copyright 2010 The myBatis Team

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->


<mapper namespace="prototype.board">
	
	
	
	<select id="select-count" parameterType="map" resultType="int">
		SELECT COUNT(*)
		  FROM TB_BOARD
		 WHERE CODE = #{code}
	</select>
	
	
	<!-- 
	<select id="select-list" parameterType="map" resultType="map">
		SELECT CODE
		     , SEQ
		     , GRP_SEQ
		     , REF_SEQ
		     , SUBJECT
		     , READ_CNT
		     , OPEN_YN
		     , CREATE_USER_ID
		     , CREATE_USER_NM
		     , CREATE_DT
		     , RNUM
		     , LVL
		     , CASE WHEN SYSDATE - NVL(UPDATE_DT, CREATE_DT) &lt; 1 THEN 'Y' ELSE 'N' END NEW_YN
		  FROM (           SELECT CODE
		                        , SEQ
		                        , GRP_SEQ
		                        , REF_SEQ
		                        , SUBJECT
		                        , READ_CNT
		                        , OPEN_YN
		                        , CREATE_USER_ID
		                        , USER_NM CREATE_USER_NM
		                        , CREATE_DT
		                        , UPDATE_DT
		                        , ROWNUM RNUM
		                        , LEVEL LVL
		                     FROM TB_BOARD A, TB_USER B
		                    WHERE A.CREATE_USER_ID = B.USER_ID
		                      AND CODE = #{code}
		                      AND USE_YN = 'Y'
		               START WITH REF_SEQ = 0
		               CONNECT BY PRIOR SEQ = REF_SEQ
		        ORDER SIBLINGS BY GRP_SEQ DESC, SEQ)
		 WHERE RNUM BETWEEN #{startPageNum} AND #{endPageNum}
	</select>
	 -->
	<select id="select-list" parameterType="map" resultType="map">
		<![CDATA[
		SELECT CODE
		     , SEQ
		     , GRP_SEQ
		     , REF_SEQ
		     , SUBJECT
		     , READ_CNT
		     , OPEN_YN
		     , USE_YN
		     , P_USE_YN
		     , CREATE_USER_ID
		     , CREATE_USER_NM
		     , CREATE_DT
		     , LVL
		     , CASE WHEN SYSDATE - NVL (UPDATE_DT, CREATE_DT) < 1 THEN 'Y' ELSE 'N' END NEW_YN
		  FROM (SELECT CODE
		             , SEQ
		             , GRP_SEQ
		             , REF_SEQ
		             , SUBJECT
		             , READ_CNT
		             , OPEN_YN
		             , USE_YN
		             , P_USE_YN
		             , CREATE_USER_ID
		             , CREATE_USER_NM
		             , CREATE_DT
		             , UPDATE_DT
		             , ROWNUM RNUM
		             , LVL
		          FROM (SELECT CODE
		                     , SEQ
		                     , GRP_SEQ
		                     , REF_SEQ
		                     , SUBJECT
		                     , READ_CNT
		                     , OPEN_YN
		                     , USE_YN
		                     , DECODE(LVL, 1, NULL, LAG (USE_YN, 1) OVER (ORDER BY RN)) P_USE_YN
		                     , CREATE_USER_ID
		                     , CREATE_USER_NM
		                     , CREATE_DT
		                     , UPDATE_DT
		                     , LVL
		                  FROM (           SELECT CODE
		                                        , SEQ
		                                        , GRP_SEQ
		                                        , REF_SEQ
		                                        , SUBJECT
		                                        , READ_CNT
		                                        , OPEN_YN
		                                        , USE_YN
		                                        , CREATE_USER_ID
		                                        , USER_NM CREATE_USER_NM
		                                        , CREATE_DT
		                                        , UPDATE_DT
		                                        , ROWNUM RN
		                                        , LEVEL LVL
		                                     FROM TB_BOARD A, TB_USER B
		                                    WHERE A.CREATE_USER_ID = B.USER_ID
		                                      AND CODE = 'B1'
		                               START WITH REF_SEQ = 0
		                               CONNECT BY PRIOR SEQ = REF_SEQ
		                        ORDER SIBLINGS BY GRP_SEQ DESC, SEQ))
		         WHERE USE_YN != 'N')
		 WHERE RNUM BETWEEN #{startPageNum} AND #{endPageNum}
		 ]]>
	</select>
	
	
	
	<insert id="insert" parameterType="map">
		<selectKey keyProperty="seq" resultType="int" order="BEFORE">
			SELECT NVL(MAX(SEQ), 0) + 1 SEQ 
			  FROM TB_BOARD
			 WHERE CODE = #{code}
		</selectKey>
		INSERT INTO TB_BOARD (CODE
		                    , SEQ
		                    , GRP_SEQ
		                    , SUBJECT
		                    , MEMO
		                    , OPEN_YN
		                    , CREATE_USER_ID
		                    , CREATE_DT
		                    , CREATE_IP
		                    )
		     VALUES (#{code}
		           , #{seq}
		           , #{seq}
		           , #{subject}
		           , #{memo,jdbcType=CLOB}
		           , #{openYn}
		           , #{createUserId}
		           , SYSDATE
		           , #{createIp}
		           )
	</insert>
	
	
	
	<select id="select" parameterType="map" resultType="resultMap">
		SELECT CODE
		     , SEQ
		     , GRP_SEQ
		     , REF_SEQ
		     , SUBJECT
		     , MEMO
		     , READ_CNT
		     , USE_YN
		     , OPEN_YN
		     , CREATE_USER_ID
		     , CREATE_DT
		     , CREATE_IP
		     , UPDATE_USER_ID
		     , UPDATE_DT
		     , UPDATE_IP
		  FROM TB_BOARD
		 WHERE CODE = #{code}
		   AND SEQ = #{seq}
		   AND USE_YN = 'Y'
		<if test="CREATE_USER_ID != null">
		   AND CREATE_USER_ID = #{CREATE_USER_ID}
		</if>
	</select>
	
	
	
	
	<select id="select-detail" parameterType="map" resultType="resultMap">
		SELECT CODE
		     , SEQ
		     , GRP_SEQ
		     , REF_SEQ
		     , SUBJECT
		     , MEMO
		     , READ_CNT
		     , USE_YN
		     , OPEN_YN
		     , DECODE(OPEN_YN, 'Y', '공개', 'N', '비공개') OPEN_YN_NM
		     , CREATE_USER_ID
		     , B.USER_NM CREATE_USER_NM
		     , CREATE_DT
		     , CREATE_IP
		     , UPDATE_USER_ID
		     , UPDATE_DT
		     , UPDATE_IP
		  FROM TB_BOARD A, TB_USER B
		 WHERE A.CREATE_USER_ID = B.USER_ID
		   AND CODE = #{code}
		   AND SEQ = #{seq}
		   AND USE_YN = 'Y'
		<if test="CREATE_USER_ID != null">
		   AND CREATE_USER_ID = #{CREATE_USER_ID}
		</if>
	</select>
	
	
	<select id="select-pre" parameterType="map" resultType="map">
		SELECT /*+ INDEX_ASC(TB_BOARD IDX_TB_BOARD_GRP_SEQ) */
		           CODE
		         , SEQ
		         , GRP_SEQ
		         , REF_SEQ
		         , SUBJECT
		 FROM TB_BOARD
		WHERE CODE = #{code}
		   AND GRP_SEQ > #{grpSeq}
		   AND REF_SEQ = '0'
		   AND ROWNUM = 1 
	</select>
	
	<select id="select-next" parameterType="map" resultType="map">
		<![CDATA[
		SELECT /*+ INDEX_DESC(TB_BOARD IDX_TB_BOARD_GRP_SEQ) */
		           CODE
		         , SEQ
		         , GRP_SEQ
		         , REF_SEQ
		         , SUBJECT
		 FROM TB_BOARD
		WHERE CODE = #{code}
		   AND GRP_SEQ < #{grpSeq}
		   AND REF_SEQ = '0'
		   AND ROWNUM = 1
		]]>
	</select>
	
	<select id="select-pre-next" parameterType="map" resultType="map">
		SELECT CODE
		     , SEQ
		     , GRP_SEQ
		     , REF_SEQ
		     , USE_YN
		     , P_USE_YN
		     , SUBJECT
		     , CREATE_DT
		     , TO_CHAR (CREATE_DT, 'YYYY-MM-DD HH24:MI:SS') CREATE_DT_FMT
		     , CREATE_USER_ID
		     , B.USER_NM CREATE_USER_NM
		     , LVL
		     , CASE WHEN SYSDATE - NVL(UPDATE_DT, CREATE_DT) &lt; 1 THEN 'Y' ELSE 'N' END NEW_YN
		  FROM (SELECT /*+ INDEX_ASC(TB_BOARD IDX_TB_BOARD_GRP_SEQ) */
		              CODE
		             , SEQ
		             , GRP_SEQ
		             , REF_SEQ
		             , SUBJECT
		             , USE_YN
		             , NULL P_USE_YN
		             , CREATE_DT
		             , CREATE_USER_ID
		             , UPDATE_DT
		             , 1 LVL
		          FROM TB_BOARD
		         WHERE CODE = #{code}
		           AND GRP_SEQ > #{grpSeq}
		           AND REF_SEQ = '0'
		           AND ROWNUM = 1
		        UNION ALL
		        	SELECT CODE
		                 , SEQ
		                 , GRP_SEQ
		                 , REF_SEQ
		                 , SUBJECT
		                 , USE_YN
		                 , LAG(USE_YN, 1) OVER(ORDER BY RNUM) P_USE_YN
		                 , CREATE_DT
		                 , CREATE_USER_ID
		                 , UPDATE_DT
		                 , LVL
		              FROM (SELECT CODE
				                 , SEQ
				                 , GRP_SEQ
				                 , REF_SEQ
				                 , SUBJECT
				                 , USE_YN
				                 , CREATE_DT
				                 , CREATE_USER_ID
				                 , UPDATE_DT
				                 , LEVEL LVL
				                 , COUNT(*) OVER() CNT
				                 , ROWNUM RNUM
				              FROM TB_BOARD
				             WHERE CODE = #{code}
				        START WITH SEQ = #{grpSeq}
				        CONNECT BY PRIOR SEQ = REF_SEQ)
					 WHERE CNT != 1
		        UNION ALL
		        SELECT /*+ INDEX_DESC(TB_BOARD IDX_TB_BOARD_GRP_SEQ) */
		              CODE
		             , SEQ
		             , GRP_SEQ
		             , REF_SEQ
		             , SUBJECT
		             , USE_YN
		             , NULL P_USE_YN
		             , CREATE_DT
		             , CREATE_USER_ID
		             , UPDATE_DT
		             , 1 LVL
		          FROM TB_BOARD
		         WHERE CODE = #{code}
		           AND GRP_SEQ &lt; #{grpSeq}
		           AND REF_SEQ = '0'
		           AND ROWNUM = 1) A
		     , TB_USER B
		 WHERE A.CREATE_USER_ID = B.USER_ID
		   AND USE_YN != 'N'
	</select>
	
	
	<!-- 	
	<delete id="delete" parameterType="map">
		DELETE FROM TB_BOARD
		 WHERE CODE = #{code} 
		   AND SEQ = #{seq}
	</delete>
	 -->
	<update id="delete" parameterType="map">
		UPDATE TB_BOARD SET
		  	 	USE_YN = 'N'
		 WHERE CODE = #{code} 
		   AND SEQ = #{seq}
	</update>
	
	
	<update id="update" parameterType="map">
		UPDATE TB_BOARD SET 
				SUBJECT = #{subject}
			  , MEMO = #{memo}
			  , OPEN_YN = #{openYn}
			  , UPDATE_USER_ID = #{updateUserId}
		      , UPDATE_DT = SYSDATE
		      , UPDATE_IP = #{updateIp}
		 WHERE CODE = #{code} 
		   AND SEQ = #{seq}
	</update>
	
	
	
	<update id="update-read-count" parameterType="map">
		UPDATE TB_BOARD SET
				READ_CNT = READ_CNT + 1
		 WHERE CODE = #{code} 
		   AND SEQ = #{seq}
	</update>
	
	
	
	<insert id="insert-reply" parameterType="map">
		<selectKey keyProperty="seq" resultType="int" order="BEFORE">
			SELECT NVL(MAX(SEQ), 0) + 1 SEQ 
			  FROM TB_BOARD
			 WHERE CODE = #{code}
		</selectKey>
		INSERT INTO TB_BOARD (CODE
		                    , SEQ
		                    , GRP_SEQ
		                    , REF_SEQ
		                    , SUBJECT
		                    , MEMO
		                    , OPEN_YN
		                    , CREATE_USER_ID
		                    , CREATE_DT
		                    , CREATE_IP
		                    )
		     VALUES (#{code}
		           , #{seq}
		           , #{grpSeq}
		           , #{refSeq}
		           , #{subject}
		           , #{memo}
		           , #{openYn}
		           , #{createUserId}
		           , SYSDATE
		           , #{createIp}
		           )
	</insert>
	
	
</mapper>
