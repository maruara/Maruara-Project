<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!--
    Copyright 2010 The myBatis Team

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->


<mapper namespace="prototype.board">
	
	
	<!-- 
	쿼리명 : 게시판 목록
	설명 : 게시판 목록을 조회한다.
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<select id="select-count" parameterType="map" resultType="int">
		SELECT COUNT(*)
		  FROM TB_BOARD
		 WHERE CODE = #{code}
		   AND USE_YN = 'Y'
	</select>
	
	
	<!-- 
	<select id="select-list" parameterType="map" resultType="map">
		SELECT CODE
		     , SEQ
		     , GRP_SEQ
		     , REF_SEQ
		     , SUBJECT
		     , READ_CNT
		     , OPEN_YN
		     , CREATE_USER_ID
		     , CREATE_USER_NM
		     , CREATE_DT
		     , RNUM
		     , LVL
		     , CASE WHEN SYSDATE - NVL(UPDATE_DT, CREATE_DT) &lt; 1 THEN 'Y' ELSE 'N' END NEW_YN
		  FROM (           SELECT CODE
		                        , SEQ
		                        , GRP_SEQ
		                        , REF_SEQ
		                        , SUBJECT
		                        , READ_CNT
		                        , OPEN_YN
		                        , CREATE_USER_ID
		                        , USER_NM CREATE_USER_NM
		                        , CREATE_DT
		                        , UPDATE_DT
		                        , ROWNUM RNUM
		                        , LEVEL LVL
		                     FROM TB_BOARD A, TB_USER B
		                    WHERE A.CREATE_USER_ID = B.USER_ID
		                      AND CODE = #{code}
		                      AND USE_YN = 'Y'
		               START WITH REF_SEQ = 0
		               CONNECT BY PRIOR SEQ = REF_SEQ
		        ORDER SIBLINGS BY GRP_SEQ DESC, SEQ)
		 WHERE RNUM BETWEEN #{startPageNum} AND #{endPageNum}
	</select>
	 -->
	<select id="select-list" parameterType="map" resultType="map">
		<![CDATA[
		SELECT CODE
		     , SEQ
		     , GRP_SEQ
		     , REF_SEQ
		     , SUBJECT
		     , READ_CNT
		     , OPEN_YN
		     , USE_YN
		     , DECODE (LVL
	             , 1, NULL
	             , SUBSTR (USE_YN_LIST, INSTR (USE_YN_LIST, '/', 1, LVL - 1)+ 1
	                                       , INSTR (USE_YN_LIST, '/', 1, LVL) - INSTR (USE_YN_LIST, '/', 1, LVL - 1) - 1)) USE_YN_PARENT
		     , CREATE_USER_ID
		     , CREATE_USER_NM
		     , CREATE_DT
		     , UPDATE_DT
		     , LVL
		     , CASE WHEN SYSDATE - NVL (UPDATE_DT, CREATE_DT) < 1 THEN 'Y' ELSE 'N' END NEW_YN
		  FROM (           SELECT CODE
		                        , SEQ
		                        , GRP_SEQ
		                        , REF_SEQ
		                        , SUBJECT
		                        , READ_CNT
		                        , OPEN_YN
		                        , USE_YN
		                        , CREATE_USER_ID
		                        , USER_NM CREATE_USER_NM
		                        , CREATE_DT
		                        , UPDATE_DT
		                        , ROWNUM RNUM
		                        , LEVEL LVL
		                        , SYS_CONNECT_BY_PATH (USE_YN, '/') USE_YN_LIST
		                     FROM TB_BOARD A, TB_USER B
		                    WHERE A.CREATE_USER_ID = B.USER_ID
		                      AND CODE = #{code}
		                      AND USE_YN = 'Y'
		               START WITH REF_SEQ = 0
		               CONNECT BY PRIOR SEQ = REF_SEQ
		        ORDER SIBLINGS BY GRP_SEQ DESC, SEQ)
		 WHERE RNUM BETWEEN #{startPageNum} AND #{endPageNum}
		 ]]>
	</select>
	
	
	
	
	<!-- 
	쿼리명 : 게시판 저장
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<insert id="insert" parameterType="map">
		<selectKey keyProperty="seq" resultType="int" order="BEFORE">
			SELECT NVL(MAX(SEQ), 0) + 1 SEQ 
			  FROM TB_BOARD
			 WHERE CODE = #{code}
		</selectKey>
		INSERT INTO TB_BOARD (CODE
		                    , SEQ
		                    , GRP_SEQ
		                    , SUBJECT
		                    , MEMO
		                    , OPEN_YN
		                    , CREATE_USER_ID
		                    , CREATE_DT
		                    , CREATE_IP
		                    )
		     VALUES (#{code}
		           , #{seq}
		           , #{seq}
		           , #{subject}
		           , #{memo,jdbcType=CLOB}
		           , #{openYn}
		           , #{createUserId}
		           , SYSDATE
		           , #{createIp}
		           )
	</insert>
	
	
	
	<!-- 
	쿼리명 : 게시판 데이터 조회
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<select id="select" parameterType="map" resultType="resultMap">
		SELECT CODE
		     , SEQ
		     , GRP_SEQ
		     , REF_SEQ
		     , SUBJECT
		     , MEMO
		     , READ_CNT
		     , USE_YN
		     , OPEN_YN
		     , CREATE_USER_ID
		     , CREATE_DT
		     , CREATE_IP
		     , UPDATE_USER_ID
		     , UPDATE_DT
		     , UPDATE_IP
		  FROM TB_BOARD
		 WHERE CODE = #{code}
		   AND SEQ = #{seq}
		   AND USE_YN = 'Y'
		<if test="CREATE_USER_ID != null">
		   AND CREATE_USER_ID = #{CREATE_USER_ID}
		</if>
	</select>
	
	
	
	
	<!-- 
	쿼리명 : 게시판 데이터 상세 조회
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<select id="select-detail" parameterType="map" resultType="resultMap">
		SELECT CODE
		     , SEQ
		     , GRP_SEQ
		     , REF_SEQ
		     , SUBJECT
		     , MEMO
		     , READ_CNT
		     , USE_YN
		     , OPEN_YN
		     , DECODE(OPEN_YN, 'Y', '공개', 'N', '비공개') OPEN_YN_NM
		     , CREATE_USER_ID
		     , B.USER_NM CREATE_USER_NM
		     , CREATE_DT
		     , CREATE_IP
		     , UPDATE_USER_ID
		     , UPDATE_DT
		     , UPDATE_IP
		  FROM TB_BOARD A, TB_USER B
		 WHERE A.CREATE_USER_ID = B.USER_ID
		   AND CODE = #{code}
		   AND SEQ = #{seq}
		   AND USE_YN = 'Y'
		<if test="CREATE_USER_ID != null">
		   AND CREATE_USER_ID = #{CREATE_USER_ID}
		</if>
	</select>
	
	
	
	<!-- 
	쿼리명 : 게시판 이전글 정보
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<select id="select-pre" parameterType="map" resultType="map">
		SELECT /*+ INDEX_ASC(TB_BOARD IDX_TB_BOARD_GRP_SEQ) */
		           CODE
		         , SEQ
		         , GRP_SEQ
		         , REF_SEQ
		         , SUBJECT
		 FROM TB_BOARD
		WHERE CODE = #{code}
		   AND GRP_SEQ > #{grpSeq}
		   AND REF_SEQ = '0'
		   AND ROWNUM = 1 
	</select>
	
	
	<!-- 
	쿼리명 : 게시판 다음글 정보
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<select id="select-next" parameterType="map" resultType="map">
		<![CDATA[
		SELECT /*+ INDEX_DESC(TB_BOARD IDX_TB_BOARD_GRP_SEQ) */
		           CODE
		         , SEQ
		         , GRP_SEQ
		         , REF_SEQ
		         , SUBJECT
		 FROM TB_BOARD
		WHERE CODE = #{code}
		   AND GRP_SEQ < #{grpSeq}
		   AND REF_SEQ = '0'
		   AND ROWNUM = 1
		]]>
	</select>
	
	
	
	<!-- 
	쿼리명 : 게시판 이전글/현재글/다음글 정보
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<select id="select-pre-next" parameterType="map" resultType="map">
		SELECT CODE
		     , SEQ
		     , GRP_SEQ
		     , REF_SEQ
		     , USE_YN
		     , USE_YN_PARENT
		     , SUBJECT
		     , CREATE_DT
		     , TO_CHAR (CREATE_DT, 'YYYY-MM-DD HH24:MI:SS') CREATE_DT_FMT
		     , CREATE_USER_ID
		     , B.USER_NM CREATE_USER_NM
		     , LVL
		     , CASE WHEN SYSDATE - NVL(UPDATE_DT, CREATE_DT) &lt; 1 THEN 'Y' ELSE 'N' END NEW_YN
		  FROM (SELECT /*+ INDEX_ASC(TB_BOARD IDX_TB_BOARD_GRP_SEQ) */
		              CODE
		             , SEQ
		             , GRP_SEQ
		             , REF_SEQ
		             , SUBJECT
		             , USE_YN
		             , CREATE_DT
		             , CREATE_USER_ID
		             , UPDATE_DT
		             , 1 LVL
		             , NULL USE_YN_PARENT
		          FROM TB_BOARD
		         WHERE CODE = #{code}
		           AND GRP_SEQ > #{grpSeq}
		           AND REF_SEQ = '0'
		           AND USE_YN = 'Y'
		           AND ROWNUM = 1
		        UNION ALL
		        	SELECT CODE
		                 , SEQ
		                 , GRP_SEQ
		                 , REF_SEQ
		                 , SUBJECT
		                 , USE_YN
		                 , CREATE_DT
		                 , CREATE_USER_ID
		                 , UPDATE_DT
		                 , LVL
		                 , DECODE (LVL
				             , 1, NULL
				             , SUBSTR (USE_YN_LIST, INSTR (USE_YN_LIST, '/', 1, LVL - 1)+ 1
				          			, INSTR (USE_YN_LIST, '/', 1, LVL) - INSTR (USE_YN_LIST, '/', 1, LVL - 1) - 1)) USE_YN_PARENT
		              FROM (SELECT CODE
				                 , SEQ
				                 , GRP_SEQ
				                 , REF_SEQ
				                 , SUBJECT
				                 , USE_YN
				                 , CREATE_DT
				                 , CREATE_USER_ID
				                 , UPDATE_DT
				                 , LEVEL LVL
				                 , COUNT(*) OVER() CNT
				                 , ROWNUM RNUM
				                 , SYS_CONNECT_BY_PATH (USE_YN, '/') USE_YN_LIST 
				              FROM TB_BOARD
				             WHERE CODE = #{code}
				               AND USE_YN = 'Y'
				        START WITH SEQ = #{grpSeq}
				        CONNECT BY PRIOR SEQ = REF_SEQ)
					 WHERE CNT != 1
		        UNION ALL
		        SELECT /*+ INDEX_DESC(TB_BOARD IDX_TB_BOARD_GRP_SEQ) */
		              CODE
		             , SEQ
		             , GRP_SEQ
		             , REF_SEQ
		             , SUBJECT
		             , USE_YN
		             , CREATE_DT
		             , CREATE_USER_ID
		             , UPDATE_DT
		             , 1 LVL
		             , NULL USE_YN_PARENT
		          FROM TB_BOARD
		         WHERE CODE = #{code}
		           AND GRP_SEQ &lt; #{grpSeq}
		           AND REF_SEQ = '0'
		           AND USE_YN = 'Y'
		           AND ROWNUM = 1) A
		     , TB_USER B
		 WHERE A.CREATE_USER_ID = B.USER_ID
	</select>
	
	
	
	<!-- 
	쿼리명 : 게시판 삭제
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<!-- 	
	<delete id="delete" parameterType="map">
		DELETE FROM TB_BOARD
		 WHERE CODE = #{code} 
		   AND SEQ = #{seq}
	</delete>
	 -->
	<update id="delete" parameterType="map">
		UPDATE TB_BOARD SET
		  	 	USE_YN = 'N'
		 WHERE CODE = #{code} 
		   AND SEQ = #{seq}
	</update>
	
	
	
	<!-- 
	쿼리명 : 게시판 수정
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<update id="update" parameterType="map">
		UPDATE TB_BOARD SET 
				SUBJECT = #{subject}
			  , MEMO = #{memo}
			  , OPEN_YN = #{openYn}
			  , UPDATE_USER_ID = #{updateUserId}
		      , UPDATE_DT = SYSDATE
		      , UPDATE_IP = #{updateIp}
		 WHERE CODE = #{code} 
		   AND SEQ = #{seq}
	</update>
	
	
	
	
	<!-- 
	쿼리명 : 게시판 조회수 증가
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<update id="update-read-count" parameterType="map">
		UPDATE TB_BOARD SET
				READ_CNT = READ_CNT + 1
		 WHERE CODE = #{code} 
		   AND SEQ = #{seq}
	</update>
	
	
	
	<!-- 
	쿼리명 : 게시판 리플 저장
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<insert id="insert-reply" parameterType="map">
		<selectKey keyProperty="seq" resultType="int" order="BEFORE">
			SELECT NVL(MAX(SEQ), 0) + 1 SEQ 
			  FROM TB_BOARD
			 WHERE CODE = #{code}
		</selectKey>
		INSERT INTO TB_BOARD (CODE
		                    , SEQ
		                    , GRP_SEQ
		                    , REF_SEQ
		                    , SUBJECT
		                    , MEMO
		                    , OPEN_YN
		                    , CREATE_USER_ID
		                    , CREATE_DT
		                    , CREATE_IP
		                    )
		     VALUES (#{code}
		           , #{seq}
		           , #{grpSeq}
		           , #{refSeq}
		           , #{subject}
		           , #{memo}
		           , #{openYn}
		           , #{createUserId}
		           , SYSDATE
		           , #{createIp}
		           )
	</insert>
	
	
	
	<!-- 
	쿼리명 : 게시판 댓글 저장
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<insert id="insert-comment" parameterType="map">
		<selectKey keyProperty="cseq" resultType="int" order="BEFORE">
			SELECT NVL(MAX(CSEQ), 0) + 1 CSEQ 
			  FROM TB_COMMENT
			 WHERE CODE = #{code}
			   AND SEQ = #{seq}
		</selectKey>
		INSERT INTO TB_COMMENT (CODE
		                      , SEQ
		                      , CSEQ
		                      , GRP_CSEQ
		                      , MEMO
		                      , CREATE_USER_ID
		                      , CREATE_DT
		                      , CREATE_IP)
		     VALUES (#{code}
		           , #{seq}
		           , #{cseq}
		           , #{cseq}
		           , #{memo}
		           , #{createUserId}
		           , SYSDATE
		           , #{createIp})
	</insert>
	
	
	
	
	
	
	<!-- 
	쿼리명 : 게시판 댓글 목록
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<select id="select-comment-list" parameterType="map" resultType="resultMap">
		SELECT CODE
		     , SEQ
		     , CSEQ
		     , GRP_CSEQ
		     , REF_CSEQ
		     , DECODE (USE_YN,  'Y', MEMO,  'N', '삭제된 댓글입니다.') MEMO
		     , USE_YN
		     , CREATE_USER_ID
		     , USER_NM CREATE_USER_NM
		     , CREATE_DT
		     , UPDATE_DT
		     , RNUM
		     , LVL
		  FROM (           SELECT CODE
		                        , SEQ
		                        , CSEQ
		                        , GRP_CSEQ
		                        , REF_CSEQ
		                        , MEMO
		                        , USE_YN
		                        , CREATE_USER_ID
		                        , USER_NM
		                        , CREATE_DT
		                        , UPDATE_DT
		                        , ROWNUM RNUM
		                        , LEVEL LVL
		                     FROM TB_COMMENT A, TB_USER B
		                    WHERE A.CREATE_USER_ID = B.USER_ID
		                      AND CODE = #{code}
		                      AND SEQ = #{seq}
		               START WITH REF_CSEQ = 0
		               CONNECT BY PRIOR CSEQ = REF_CSEQ
		        ORDER SIBLINGS BY GRP_CSEQ, CSEQ DESC)
		 WHERE RNUM BETWEEN 1 AND 200
	</select>
	
	
	
	
	<!-- 
	쿼리명 : 게시판 댓글 총 건수
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<select id="select-comment-count" parameterType="map" resultType="int">
		SELECT COUNT(*)
		  FROM TB_COMMENT
		 WHERE CODE = #{code}
		   AND SEQ = #{seq}
		   AND USE_YN = 'Y'
	</select>
	
	
	
	
	
	<!-- 
	쿼리명 : 게시판 댓글 조회
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<select id="select-comment" parameterType="map" resultType="resultMap">
		SELECT CODE
		     , SEQ
		     , CSEQ
		     , GRP_CSEQ
		     , REF_CSEQ
		     , MEMO
		     , USE_YN
		     , CREATE_USER_ID
		     , CREATE_DT
		     , CREATE_IP
		     , UPDATE_USER_ID
		     , UPDATE_DT
		     , UPDATE_IP
		  FROM TB_COMMENT
		 WHERE CODE = #{code}
		     AND SEQ = #{seq}
		     AND CSEQ = #{cseq}	
		     AND USE_YN = 'Y'
	</select>
	
	
	
	<!-- 
	쿼리명 : 게시판 댓글 상세 조회
	설명 : 
	
	 수정일       수정자     수정내용
	2011.11.08    lcpark     최초 생성
	-->
	<select id="select-comment-detail" parameterType="map" resultType="resultMap">
		SELECT CODE
		     , SEQ
		     , CSEQ
		     , GRP_CSEQ
		     , REF_CSEQ
		     , MEMO
		     , USE_YN
		     , CREATE_USER_ID
		     , B.USER_NM CREATE_USER_NM
		     , CREATE_DT
		     , TO_CHAR(CREATE_DT, 'YYYY-MM-DD HH24:MI:SS') CREATE_DT_FMT
		     , CREATE_IP
		     , UPDATE_USER_ID
		     , UPDATE_DT
		     , UPDATE_IP
		  FROM TB_COMMENT A, TB_USER B
		 WHERE A.CREATE_USER_ID = B.USER_ID 
		 	 AND CODE = #{code}
		     AND SEQ = #{seq}
		     AND CSEQ = #{cseq}
		     AND USE_YN = 'Y'
	</select>
	
	
	
</mapper>
