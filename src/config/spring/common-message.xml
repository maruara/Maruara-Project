<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	
	
	<!-- *************************************************************************** -->
	<!-- *************************************************************************** -->
	<!-- Application Message Bundle -->
	<!-- *************************************************************************** -->
	<!-- *************************************************************************** -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8"/>
		<!--
		message가 하나일 경우 사용
		<property name="basename" value="/WEB-INF/messages/messages" />
		
		message가 여러개일 경우 사용
		<property name="basenames">
			<list>
				<value>/WEB-INF/messages/messages</value>
				<value>/WEB-INF/messages/messages.common</value>
			</list>
		</property>
		
		message가 classpath일 경우 사용
		<value>classpath:com/web/messages/message</value>
		-->
		<property name="basenames">
			<list>
				<value>classpath:config/messages/messages</value>
				<value>classpath:config/messages/messages.common</value>
			</list>
		</property>
		<!-- cacheSeconds는 message 을 pooling하는 시간(초) 간격이다. 운영시에는 0으로 설정하거나 주석처리 해야 함. (기본 0) -->
		<property name="cacheSeconds" value="60" />
		<property name="fallbackToSystemLocale" value="false" />
	</beans:bean>
	
	
	<!-- 
	Bean에서 메시지 사용할 때 접근이 수월한 Method 제공
	messageSource만 사용했을 경우 : 
		messageSource.getMessage("messages.test", null, Locale.KOREA)
	messageSourceAccessor를 사용했을 경우
		messageSourceAccessor.getMessage("messages.test")
	
	Jsp 에서 사용
		<%@ taglib prefix="spring" uri="http://www.springframework.org/tags"%>
		<spring:message code="title.user.form"></spring:message>
			arguments : 부가적인 인자를 넘겨줌. 콤마로 구분된 문자열, 객체 배열, 객체 하나를 넘김
			argumentSeparator : 넘겨줄 인자들의 구분자 설정. 기본값은 콤마.
			code : 룩업할 메시지의 키 지정. 지정하지 않으면 text에 입력한 값 출력.
			htmlEscape : html 기본 escapse 속성 오버라이딩. 기본값 false.
			javaScriptEscape : 기본값 false
			message : MessageSourceResolvable 인자로 Spring MVC validation을 거친 errors의 메시지를 쉽게 보여줄 때 사용
			scope : 결과 값을 변수에 지정할 때 변수의 scope 지정 (page, request, session, application)
			text : 해당 code로 가져온 값이 없을 때 기본으로 보여줄 문자열. 빈 값이면 null 출력.
			var : 결과 값을 이 속성에 해당한 문자열에 바인딩 할 때 사용. 빈 값이면 그냥 JSP에 뿌려줌.
	-->
	<beans:bean id="messageSourceAccessor" class="org.springframework.context.support.MessageSourceAccessor">
        <constructor-arg ref="messageSource"/>
    </beans:bean>
    
    
    
    
    <!-- *************************************************************************** -->
	<!-- *************************************************************************** -->
	<!-- Saves a locale change using a session -->
	<!-- *************************************************************************** -->
	<!-- *************************************************************************** -->
	<!--
	LocaleResolver 의 locale 변경
		@Autowired
		LocaleResolver localeResolver;
		localeResolver.setLocale(request, response, new Locale(request.getParameter("locale")));
		System.out.println(localeResolver.resolveLocale(request));		
	
	Cookie를 이용한 locale 설정
		cookieName : (default: classname + LOCALE) 쿠키 이름
		cookieMaxAge : (default: Integer.MAX_INT null) 쿠키가 살아있는 시간. -1로 설정할 경우 브라우저를 닫을 때 없어짐
		cookiePath : (default: /) Path를 지정해 주면 해당하는 path와 하위 path에서만 참조
	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="ko" />
		<property name="cookieName" value="clientlanguage" />
		<property name="cookieMaxAge" value="100000" />
		<property name="cookiePath" value="web/cookie" />
	</beans:bean>
	
	AcceptHeader를 이용한 locale 설정 (setLocale() Method를 이용한 locale 변경은 불가능하다)
	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver" />
	
	FixedLocaleResolver를 이용한 locale 설정 (setLocale() Method를 이용한 locale 변경은 불가능하다)
	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
		<property name="defaultLocale" value="en" />
	</beans:bean>
	 -->
	<!-- 
	 <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="ko" />
		<property name="cookieName" value="clientlanguage" />
		<property name="cookieMaxAge" value="-1" />
		<property name="cookiePath" value="/" />
	</beans:bean>
	 -->
	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="ko_KR" />
	</beans:bean>
    
    
    
    <!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de -->
	<!--
	이 설정은 common-interceptor.xml 에서 사용
	  
	locale Parameter Key를 변경하고 싶을 경우 사용
	<beans:bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="lang" />
	</beans:bean>
	
	bean으로 따로 정의 할 경우 (Handler에서 Interceptor를 따로 정의해서 사용할 경우 정의해서 사용)
	<beans:bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	-->
    
    
	
</beans:beans>