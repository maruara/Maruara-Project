<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
	
	
	
	
	
	<!-- *************************************************************************** -->
	<!-- *************************************************************************** -->
	<!-- Configures Handler Interceptors -->	
	<!-- *************************************************************************** -->
	<!-- *************************************************************************** -->
	<!--
	<mvc:interceptors>
		<bean id="loginInterceptor" class="com.web.interceptors.LoginInterceptor" />
    	<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
  	</mvc:interceptors>
  	
  	Interceptor의 mapping을 등록할 경우 <mvc:annotation-driven> 설정을 해줘야 한다.
  	<mvc:annotation-driven> 이 태그는 MappedInterceptor를 자동으로 등록해 준다. MappedInterceptor는 path와 interceptor를 지정해주면
  	해당 경로패턴에 일치하는 URL에 대해서는 어떤 핸들러 매핑을 이용하든 상관없이 지정한 인터셉터를 적용한다.
  	이를 사용하지 않고 bean으로 interceptor를 등록할 경우 핸들러 매핑전략을 두개 이상 병행해서 사용하여 각각 인터셉터를 등록해줘야 한다.
  	mvc:interceptor를 사용하지 않을 경우에는 모든 경로에 적용된다. mvc:mapping path="/" 와 동일
	  	* : 하위 한단계까지만 적용
	  	** : 하위 모든 단계까지 적용
	mvc:interceptor와 beans:bean 을 같이 등록할 경우 mvc:interceptor 다음에 beans:bean을 등록하자. 실행순서는 위에서 아래로
  	  	
  	<mvc:interceptors>
  		<mvc:interceptor>
  			<mvc:mapping path="/**/*" />
  			<beans:bean class="com.web.interceptors.LogInterceptor"></beans:bean>
  		</mvc:interceptor>
  	</mvc:interceptors>
  	
  	Handler 별로 Interceptor를 지정할 경우
	<beans:bean id="annotationInterMapper" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">       
		<property name="interceptors">          
			<list>              
				<ref bean="localeChangeInterceptor"/>
				<ref bean="themeChangeInterceptor"/>
			</list>
		</property>
		<property name="order" value="0"/>
		<property name="lazyInitHandlers" value="true"/>
	</beans:bean>
  	-->
	<mvc:interceptors>
		
		
		<!-- 
		<mvc:interceptor>
			<mvc:mapping path="/resources/**" />
			<beans:bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
				<beans:property name="cacheSeconds" value="2592000" />
				<beans:property name="useExpiresHeader" value="true" />
				<beans:property name="useCacheControlHeader" value="true" />
				<beans:property name="useCacheControlNoStore" value="true" />
			</beans:bean>
		</mvc:interceptor>
		 -->
		 
		 
		<mvc:interceptor>
			<mvc:mapping path="/*" />
			<mvc:mapping path="/prototype/**" />
			<!-- 	
				<beans:bean class="com.web.interceptors.LocaleChangeInterceptor">
			 -->
			<beans:bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
				<beans:property name="paramName" value="locale" />
			</beans:bean>
		</mvc:interceptor>
		
		
		<mvc:interceptor>
		    <mvc:mapping path="/prototype/board/**" />
			<beans:bean class="com.web.interceptors.LoginInterceptor" />
		</mvc:interceptor>
		
	</mvc:interceptors>
	
	
	
	<!-- 
	<bean class="org.springframework.web.servlet.handler.MappedInterceptor">
		<constructor-arg value="null"></constructor-arg>
		<constructor-arg>
			<bean class="org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor">
				<constructor-arg><bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean"></bean></constructor-arg>
			</bean>
		</constructor-arg>
	</bean>
	-->
	
	
	
	
	
	
</beans:beans>