<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	
	<display-name>web</display-name>
	
	
	<!-- Encoding Filter -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	
	<!-- Log4j Listener -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	
	
	
	<!-- Spring Handles all requests into the application -->
	<servlet>
		<servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
		<!--  
		<servlet-class>com.web.config.MyDispatcherServlet</servlet-class>
		-->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!--  
			<param-value>/WEB-INF/config/spring/context-common.xml</param-value>
			<param-value>/WEB-INF/config/spring/*.xml</param-value>
			<param-value>
				classpath:config/spring/common-*.xml
				classpath:config/spring/context-*.xml
				classpath:config/spring/tiles-*.xml
			</param-value>
			-->
			<param-value>classpath:config/spring/*.xml</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	
	
	<!-- Log4j Config -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<!--  
		<param-value>/WEB-INF/log/log4j.properties</param-value>
		<param-value>classpath:config/log/log4j.xml</param-value>
		-->
		<param-value>classpath:log4j.xml</param-value>
	</context-param>
	
	
	
	
	<!-- HiddenHttpMethodFilter 사용하면서 파일업로드(enctype="multipart/data")가 정상적으로 될 수 있게 하기 위해 사용 -->
	<!--  
	<filter>
    	<filter-name>multipartFilter</filter-name>
    	<filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
	</filter>
	<filter-mapping>
    	<filter-name>multipartFilter</filter-name>
	    <url-pattern>/springrest/*</url-pattern>
	</filter-mapping>
	-->
	
	
	<!--
	Method Fileter 
	Method 구분
		- 리소스 조회 : GET
		- 새로운 리소스 생성 : PUT, POST (새로운 리소스의 URI를 생성하는 주체가 서버이면 POST를 사용)
		- 존재하는 리소스 변경 : PUT
		- 존재하는 리소스 삭제 : DELETE
		- 존재하는 리소스 메타데이터 보기 : HEAD
		- 존재하는 리소스의 지원 method 체크 : OPTION
	Jsp    : <input type="hidden" name="_method" value="delete" /> 처럼 사용
	Action : @RequestMapping(method=RequestMethod.DELETE)
	-->
	<filter>
		<filter-name>httpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
	
	<filter-mapping>
        <filter-name>httpMethodFilter</filter-name>
        <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	
	
	
	<!-- Session Timeout (단위 : 분) -->
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>
	
	<!-- Error Page -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/uncaughtException</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/resourceNotFound</location>
	</error-page>
	
	<!-- Default Page -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	
</web-app>